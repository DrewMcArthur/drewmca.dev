---
import InvalidSectionTranscript from "./transcripts/InvalidSectionTranscript.astro";
import Transcript0 from "./transcripts/Transcript0.astro";
// import Transcript1 from "./transcripts/Transcript1.astro";
import Transcript9 from "./transcripts/Transcript9.astro";
import { sections } from "../../../data/tridentConfig.json";

const section = Astro.props.section as number;

const audioSourceFile: string = sections[section]?.audioSource;
const scrollStartOffset = sections[section]?.scrollStartOffset;
const scrollTotalOffset = sections[section]?.scrollTotalOffset;
---

<meta name="section" content={`${section}`} />
<meta name="scrollStartOffset" content={scrollStartOffset} />
<meta name="scrollTotalOffset" content={scrollTotalOffset} />

<audio controls id="audio-player">
  <source id="audio-source" src={audioSourceFile} type="audio/mp3" />
</audio>
<h4 class="transcript-title">Transcript</h4>
<div id="transcript">
  {
    section == 0 ? (
      <Transcript0 />
    ) : section == 9 ? (
      <Transcript9 />
    ) : (
      <InvalidSectionTranscript />
    )
  }
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const scrollStartOffset = document.querySelector<HTMLMetaElement>(
      'meta[name="scrollStartOffset"]'
    )!.content as unknown as number;
    const scrollTotalOffset = document.querySelector<HTMLMetaElement>(
      'meta[name="scrollTotalOffset"]'
    )!.content as unknown as number;

    const audio = document.querySelector("audio")!;
    const transcriptDiv = document.querySelector("#transcript")!;

    const scrollHeight =
      transcriptDiv.scrollHeight - transcriptDiv.clientHeight;
    let interval: number;

    function updateScrollPosition() {
      const proportionPlayed =
        (audio.currentTime - scrollStartOffset) /
        (audio.duration - scrollTotalOffset);
      transcriptDiv.scrollTop = proportionPlayed * scrollHeight;
    }

    audio.addEventListener("play", function () {
      updateScrollPosition(); // Initialize scroll position

      interval = setInterval(updateScrollPosition, 300); // Update every 50ms for smoother scrolling
    });

    // Stop scrolling when audio is paused or ended
    audio.addEventListener("pause", function () {
      clearInterval(interval);
    });

    audio.addEventListener("ended", function () {
      clearInterval(interval);
    });

    audio.addEventListener("seeked", updateScrollPosition); // Update scroll when user seeks in audio
  });
</script>
